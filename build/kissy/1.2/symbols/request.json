{"isNamespace":true,"desc":"辅助Manager","alias":"Request","methods":[{"type":"Request","desc":"获取models，所有请求完成回调done","alias":"Request#fetchAll","memberOf":"Request","returns":[{"title":"return","type":"Request"}],"isa":"FUNCTION","_name":"fetchAll","_params":[{"title":"param","desc":"获取models时的描述信息，如:{name:'Home',cacheKey:'key',urlParams:{a:'12'},postParams:{b:2}}","type":"Object|Array","name":"models"},{"title":"param","desc":"完成时的回调","type":"Function","name":"done"}],"example":[{"title":"example","desc":"\n        //定义\r\n        \r\n        KISSY.add('testMM',function(S,MM,Model){\r\n        \r\n            var TestMM=MM.create(Model);\r\n            TestMM.registerModels([{\r\n                name:'Test1',\r\n                url:'/api/test1.json'\r\n            },{\r\n                name:'Test2',\r\n                url:'/api/test2.json',\r\n                urlParams:{\r\n                    type:'2'\r\n                }\r\n            }]);\r\n            return TestMM;\r\n        \r\n        },{\r\n            requires:[\"magix/manager\",\"magix/model\"]\r\n        });\r\n        \r\n        //使用\r\n        \r\n        KISSY.use('testMM',function(S,TM){\r\n        \r\n            TM.fetchAll([{\r\n                name:'Test1'\r\n            },{\r\n                name:'Test2'\r\n            }],function(err,m1,m2){\r\n\r\n            });\r\n        });"}]},{"type":"Request","desc":"保存models，所有请求完成回调done","alias":"Request#save","memberOf":"Request","returns":[{"title":"return","type":"Request"}],"isa":"FUNCTION","_name":"save","_params":[{"title":"param","desc":"保存models时的描述信息，如:{name:'Home'urlParams:{a:'12'},postParams:{b:2}}","type":"Object|Array","name":"models"},{"title":"param","desc":"完成时的回调","type":"Function","name":"done"}]},{"type":"Request","desc":"获取models，按顺序执行回调done","alias":"Request#fetchOrder","memberOf":"Request","returns":[{"title":"return","type":"Request"}],"isa":"FUNCTION","_name":"fetchOrder","_params":[{"title":"param","desc":"获取models时的描述信息，如:{name:'Home',cacheKey:'key',urlParams:{a:'12'},postParams:{b:2}}","type":"Object|Array","name":"models"},{"title":"param","desc":"完成时的回调","type":"Function","name":"done"}],"example":[{"title":"example","desc":"\n        //代码片断：\r\n        //1：获取多个model，回调只有一个时\r\n        var r=MM.fetchOrder([\r\n            {name:'M1'},\r\n            {name:'M2'},\r\n            {name:'M3'}\r\n        ],function(err,model){//按m1,m2,m3顺序回调，即使m2的请求先于m1的返回，也是m1调用后才调用m2，只提供一个回调时，回调会被调用三次\r\n            if(err){\r\n                alert(err.msg);\r\n            }else{\r\n                alert(model.get('name'));\r\n            }\r\n        });\r\n\r\n        //2:获取多个model，回调多于一个时\r\n        var r=MM.fetchOrder([\r\n            {name:'M1'},\r\n            {name:'M2'},\r\n            {name:'M3'}\r\n        ],function(err,model){//调用m1\r\n            if(err){\r\n                alert(err.msg);\r\n            }else{\r\n                alert(model.get('name'));\r\n            }\r\n        },function(err,model){//m1调用完成后调用m2\r\n            if(err){\r\n                alert(err.msg);\r\n            }else{\r\n                alert(model.get('name'));\r\n            }\r\n        });\r\n        //注意，回调多于一个时，当提供的回调多于或少于model个数时，多或少的会被忽略掉"}]},{"type":"Request","desc":"获取models，其中任意一个成功均立即回调，回调会被调用多次","alias":"Request#fetchOne","memberOf":"Request","returns":[{"title":"return","type":"Request"}],"isa":"FUNCTION","_name":"fetchOne","_params":[{"title":"param","desc":"获取models时的描述信息，如:{name:'Home',cacheKey:'key',urlParams:{a:'12'},postParams:{b:2}}","type":"Object|Array","name":"models"},{"title":"param","desc":"完成时的回调","type":"Function","name":"callback"}],"example":[{"title":"example","desc":"\n        //代码片断：\r\n        //1：获取多个model，回调只有一个时\r\n        var r=MM.fetchOrder([\r\n            {name:'M1'},\r\n            {name:'M2'},\r\n            {name:'M3'}\r\n        ],function(err,model){//m1,m2,m3，谁快先调用谁，且被调用三次\r\n            if(err){\r\n                alert(err.msg);\r\n            }else{\r\n                alert(model.get('name'));\r\n            }\r\n        });\r\n\r\n        //2:获取多个model，回调多于一个时\r\n        var r=MM.fetchOrder([\r\n            {name:'M1'},\r\n            {name:'M2'},\r\n            {name:'M3'}\r\n        ],function(err,model){//m1返回即调用\r\n            if(err){\r\n                alert(err.msg);\r\n            }else{\r\n                alert(model.get('name'));\r\n            }\r\n        },function(err,model){//m2返回即调用\r\n            if(err){\r\n                alert(err.msg);\r\n            }else{\r\n                alert(model.get('name'));\r\n            }\r\n        });"}]},{"desc":"中止所有model的请求\r注意：调用该方法后会中止请求，并调用回调传递abort异常消息","alias":"Request#stop","memberOf":"Request","isa":"FUNCTION","_name":"stop"},{"type":"Request","desc":"前一个fetchX或saveX任务做完后的下一个任务","alias":"Request#next","memberOf":"Request","returns":[{"title":"return","type":"Request"}],"isa":"FUNCTION","_name":"next","_params":[{"title":"param","desc":"当前面的任务完成后调用该回调","type":"Function","name":"callback"}],"example":[{"title":"example","desc":"\n        var r=MM.fetchAll([\r\n            {name:'M1'},\r\n            {name:'M2'}\r\n        ],function(err,m1,m2){\r\n\r\n            return 'fetchAllReturned';\r\n        });\r\n\r\n        r.next(function(err,fetchAllReturned){\r\n            alert(fetchAllReturned);\r\n        });"}]},{"desc":"做下一个任务","alias":"Request#doNext","memberOf":"Request","isa":"FUNCTION","_name":"doNext","_params":[{"title":"param","desc":"上次请求任务回调的返回值，成功时：[null,Returned]，失败时：[{msg:'message'},null]","type":"Array","name":"preArgs"}],"example":[{"title":"example","desc":"var r=Manager.createRequest(view);\rr.fetchAll('Name',function(e,m){\r\r    return m;\r});\rr.next(function(e,result){//result为m\r    return r.fetchAll('NextName',function(e,m){\r        return m;\r    });\r});\r\rr.next(function(e,m){//m===next m;\r    return 'ok';\r});\r\rr.next(function(e,m){\r    //m==='ok';\r});\r\r//当出错时，e为出错的信息"}]},{"desc":"销毁当前请求，与stop的区别是：stop后还可以继续发起新请求，而destroy后则不可以，而且不再调用相应的回调","alias":"Request#destroy","memberOf":"Request","isa":"FUNCTION","_name":"destroy"}],"isa":"CONSTRUCTOR","_name":"Request","_params":[{"title":"param","type":"Manager","name":"host"}]}